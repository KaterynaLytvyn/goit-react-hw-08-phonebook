{"version":3,"file":"static/js/684.5cbc7576.chunk.js","mappings":"6SAQe,SAASA,IAEpB,OAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GAEjB,IAAMC,EAAQD,EAAME,OAAOD,MAG3B,OAFaD,EAAME,OAAOT,MAGtB,IAAK,OACD,OAAOC,EAAQO,GACnB,IAAK,QACD,OAAOL,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,SAKNE,EAAgB,mCAAG,WAAMC,GAAN,gGAEIf,EAAae,GAFjB,OAEXC,EAFW,OAGjBC,QAAQC,IAAI,yBAA0BF,GACjCA,EAAOG,MACPC,MAAM,oBAAqBJ,EAAOG,MAAME,KAAKjB,MAD/BH,GAASqB,EAAAA,EAAAA,IAASN,EAAOK,OAJ3B,gDAQjBJ,QAAQC,IAAI,QAAZ,MARiB,yDAAH,sDAwBtB,OACI,UAAC,IAAD,YACI,+CACA,UAAC,IAAD,CAAMK,SAfO,SAAAZ,GACjBA,EAAMa,iBAGNV,EADa,CAAEV,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,IAI5BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAMR,WACI,UAAC,UAAD,CAAYgB,UAAU,OAAtB,WACI,SAAC,UAAD,oBACA,SAAC,YAAD,CAAcC,KAAK,OAAOC,YAAY,kBAAkBvB,KAAK,OAAOwB,SAAUlB,QAElF,UAAC,UAAD,CAAYe,UAAU,OAAOI,UAAU,iBAAvC,WACI,SAAC,UAAD,6BACA,SAAC,YAAD,CAAcH,KAAK,QAAQC,YAAY,cAAcvB,KAAK,QAAQwB,SAAUlB,KAC5E,SAAC,SAAD,CAAWe,UAAU,aAArB,gEAKJ,UAAC,UAAD,CAAYA,UAAU,OAAOI,UAAU,oBAAvC,WACI,SAAC,UAAD,wBACA,SAAC,YAAD,CAAcH,KAAK,WAAWC,YAAY,WAAWvB,KAAK,WAAWwB,SAAUlB,QAElF,SAAC,IAAD,CAAQoB,QAAQ,UAAUJ,KAAK,SAA/B","sources":["views/RegisterView.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useDispatch } from 'react-redux'\nimport { useRegisterUserMutation } from '../redux/PhonebookSlice'\nimport { register } from '../redux/actions'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\n\nexport default function RegisterView() {\n\n    const [registerUser] = useRegisterUserMutation()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = event => {\n\n        const value = event.target.value;\n        const name = event.target.name;\n\n        switch ( name ) {\n            case 'name': \n                return setName(value);\n            case 'email': \n                return setEmail(value);\n            case 'password': \n                return setPassword(value);\n            default:\n                return;      \n        }\n\n    }\n\n    const handleUserSignUp = async user => {\n        try {\n            const result = await registerUser(user)\n            console.log('result of registerUser', result)\n            if (!result.error){dispatch(register(result.data))}  \n            else alert('An error occured:'+ result.error.data.name)           \n            \n          } catch (error) {            \n            console.log('error', error)\n          }\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const user = { name, email, password }\n        handleUserSignUp(user)\n\n        \n        setName('');\n        setEmail('');\n        setPassword('');\n    }   \n\n    return(\n        <Container>\n            <h1>Registration Page</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"text\" placeholder=\"Enter your name\" name=\"name\" onChange={handleChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" onChange={handleChange} />\n                    <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange}/>\n                </Form.Group>\n                 <Button variant=\"primary\" type=\"submit\">\n                    Register\n                </Button>\n            </Form>\n        </Container>\n    )\n}"],"names":["RegisterView","useRegisterUserMutation","registerUser","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","event","value","target","handleUserSignUp","user","result","console","log","error","alert","data","register","onSubmit","preventDefault","className","type","placeholder","onChange","controlId","variant"],"sourceRoot":""}