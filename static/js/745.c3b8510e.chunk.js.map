{"version":3,"file":"static/js/745.c3b8510e.chunk.js","mappings":"6SAQe,SAASA,IAEpB,OAAoBC,EAAAA,EAAAA,MAAbC,GAAP,eACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GAEjB,IAAMC,EAAQD,EAAME,OAAOD,MAG3B,OAFaD,EAAME,OAAOC,MAGtB,IAAK,QACD,OAAOP,EAASK,GACpB,IAAK,WACD,OAAOH,EAAYG,GACvB,QACI,SAKNG,EAAe,mCAAG,WAAMC,GAAN,gGAGKd,EAAUc,GAHf,OAGVC,EAHU,OAIhBd,GAASe,EAAAA,EAAAA,IAAMD,EAAOE,OAJN,uGAAH,sDAqBrB,OACI,UAAC,IAAD,YACI,wCACA,UAAC,IAAD,CAAMC,SAfO,SAAAT,GAEjBA,EAAMU,iBAGNN,EADa,CAAET,MAAAA,EAAOE,SAAAA,IAGtBD,EAAS,IACTE,EAAY,KAOR,WACI,UAAC,UAAD,CAAYa,UAAU,OAAOC,UAAU,iBAAvC,WACI,SAAC,UAAD,6BACA,SAAC,YAAD,CAAcC,KAAK,QAAQC,YAAY,cAAcX,KAAK,QAAQY,SAAUhB,KAC5E,SAAC,SAAD,CAAWY,UAAU,aAArB,gEAKJ,UAAC,UAAD,CAAYA,UAAU,OAAOC,UAAU,oBAAvC,WACI,SAAC,UAAD,wBACA,SAAC,YAAD,CAAcC,KAAK,WAAWC,YAAY,WAAWX,KAAK,WAAWY,SAAUhB,QAElF,SAAC,IAAD,CAAQiB,QAAQ,UAAUH,KAAK,SAA/B","sources":["views/LoginView.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useDispatch } from 'react-redux'\nimport { useLoginUserMutation } from '../redux/PhonebookSlice'\nimport { login } from '../redux/actions'\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\n\nexport default function LoginView() {\n\n    const [loginUser] = useLoginUserMutation()\n    const dispatch = useDispatch()\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const handleChange = event => {\n\n        const value = event.target.value;\n        const name = event.target.name;\n\n        switch ( name ) {\n            case 'email': \n                return setEmail(value);\n            case 'password': \n                return setPassword(value);\n            default:\n                return;      \n        }\n\n    }\n\n    const handleUserLogin = async user => {\n        \n        try {\n            const result = await loginUser(user)\n            dispatch(login(result.data))\n          } catch (error) {\n          }\n    }\n\n    const handleSubmit = event => {\n        \n        event.preventDefault();\n\n        const user = { email, password }\n        handleUserLogin(user)\n        \n        setEmail('');\n        setPassword('');\n    }   \n\n\n    return(\n        <Container>\n            <h1>Login Page</h1>\n            <Form onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" onChange={handleChange} />\n                    <Form.Text className=\"text-muted\">\n                    We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange}/>\n                </Form.Group>\n                 <Button variant=\"primary\" type=\"submit\">\n                    Log in\n                </Button>\n            </Form>\n        </Container>\n    )\n}"],"names":["LoginView","useLoginUserMutation","loginUser","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","event","value","target","name","handleUserLogin","user","result","login","data","onSubmit","preventDefault","className","controlId","type","placeholder","onChange","variant"],"sourceRoot":""}