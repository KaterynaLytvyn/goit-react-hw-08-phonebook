{"version":3,"file":"static/js/86.67cbbd46.chunk.js","mappings":"6NACA,EAAuB,0BAAvB,EAAwD,0B,mBC4BxD,EAxBoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAEnB,GAAwBC,EAAAA,EAAAA,MAAjBC,GAAP,eAGA,OAFAC,QAAQC,IAAI,6BAA8BJ,IAGtC,eAAIK,UAAWC,EAAf,SACKN,EAASO,KAAI,SAAAC,GAAO,OACrB,gBAAqBH,UAAWC,EAAhC,UACKE,EAAQC,KADb,MACsBD,EAAQE,QAC1B,mBACIL,UAAY,SACZM,KAAK,SACLC,QAAS,kBAAMV,EAAcM,EAAQK,KAHzC,sBAFKL,EAAQK,U,UCZ7B,EAAwB,2BCET,SAASC,EAAYC,GAElC,IAAQC,EAAaD,EAAbC,SAER,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOR,EAAP,KAAaS,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeS,EAAf,KAGMC,EAAe,SAAAC,GACnB,IAAMC,EAAQD,EAAME,OAAOC,WAAWf,KAAKa,MAE5B,SAAXA,GAAoBJ,EAAQG,EAAME,OAAOD,OAC9B,WAAXA,GAAsBH,EAAUE,EAAME,OAAOD,QAgBnD,OACI,kBAAMN,SAbW,SAAAK,GACnBA,EAAMI,iBAKNT,EAHgB,CAAEP,KAAMA,EAAMC,OAAQA,IAKtCQ,EAAQ,IACRC,EAAU,KAIR,WACE,mBAAOd,UAAWC,EAAlB,kBAEE,kBACEK,KAAK,OACLF,KAAK,OACLiB,QAAQ,yHACRC,MAAM,yIACNL,MAAOb,EACPmB,SAAUR,EACVS,UAAQ,QAGZ,mBAAOxB,UAAWC,EAAlB,oBAEE,kBACEK,KAAK,MACLF,KAAK,SACLiB,QAAQ,yFACRC,MAAM,+FACNL,MAAOZ,EACPkB,SAAUR,EACVS,UAAQ,QAGZ,mBAAQlB,KAAK,SAASN,UAAU,SAAhC,4B,wBCxCR,EAbe,WAEX,IAAMyB,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,UACpCG,GAAWC,EAAAA,EAAAA,MAEjB,OACI,sDAEI,kBAAOvB,KAAK,OAAOW,MAAOQ,EAAQF,SAAU,SAAAP,GAAK,OAAIY,GAASE,EAAAA,EAAAA,IAAed,EAAMe,cAAcd,e,UCL9F,SAASe,IAEpB,OAA6CC,EAAAA,EAAAA,MAA/BtC,EAAd,EAAQuC,KAAgBC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,UAC/B,GAAqBC,EAAAA,EAAAA,MAAdC,GAAP,eACMb,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,UAEpCc,EAAgB,mCAAG,WAAMpC,GAAN,qEAClBR,EAAS6C,MAAK,SAAAC,GAAC,OAAIA,EAAErC,OAAQD,EAAQC,QADnB,uBAEnBsC,MAAMvC,EAAQC,KAAM,2BAFD,mDAObkC,EAAWnC,GAPE,uDASnBL,QAAQC,IAAI,QAAZ,MATmB,yDAAH,sDAoBtB,OACI,UAAC4C,EAAA,EAAD,YACI,uCACA,SAAClC,EAAD,CAAaE,SAAU4B,KACvB,sCACA,SAAC,EAAD,IACCJ,IAAS,8CAAsBA,KAC/BC,IAAa,sCACbzC,IAAY,SAAC,EAAD,CAAaA,SAfP,WACzB,IAAMiD,EAAmBnB,EAAOoB,cAGhC,OADelD,EAAS8B,QAAO,SAAAtB,GAAO,OAAIA,EAAQC,KAAKyC,cAAcC,SAASF,MAYpCG","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../redux/PhonebookSlice.js'\n\n\nconst ContactList = ({ contacts }) => {\n\n    const [deleteContact] = useDeleteContactMutation()\n    console.log('contacts from ContactsView', contacts)\n\n    return (\n        <ul className={s.list}>\n            {contacts.map(contact => \n            <li key={contact.id} className={s.item}>\n                {contact.name} : {contact.number} \n                <button \n                    className = \"button\" \n                    type=\"button\" \n                    onClick={() => deleteContact(contact.id)}\n                >Delete</button>\n            </li>)}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.array,\n  };\n\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactForm_label__-cVXI\"};","import { useState } from 'react';\nimport s from './ContactForm.module.css'\n\nexport default function ContactForm(props) {\n  \n  const { onSubmit } = props\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\n  const handleChange = event => {\n    const value = event.target.attributes.name.value;\n\n    if (value ===  \"name\"){ setName(event.target.value) }\n    if (value ===  \"number\"){ setNumber(event.target.value) }\n\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contact = { name: name, number: number}\n    //console.log('trying to add contact:', contact)\n\n    onSubmit(contact)\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <button type=\"submit\" className=\"button\">Add contact</button>\n      </form>\n    );\n}\n\n\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { filterContacts } from '../../redux/actions';\n\n\nconst Filter = () => {\n\n    const filter = useSelector(state => state.filter)\n    const dispatch = useDispatch()\n\n    return (\n        <label>\n            Find contacts by name\n            <input type=\"text\" value={filter} onChange={event => dispatch(filterContacts(event.currentTarget.value))} />\n        </label>\n    )\n}\n\nexport default Filter;","import ContactList from '../components/ContactList/ContactList.jsx'\nimport ContactForm from '../components/ContactForm/ContactForm.jsx'\nimport Filter from '../components/Filter/Filter.jsx'\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery, useAddContactMutation } from '../redux/PhonebookSlice'\nimport Container from 'react-bootstrap/Container';\n\nexport default function ContactsView() {\n\n    const { data: contacts, error, isLoading } = useGetContactsQuery()\n    const [addContact] = useAddContactMutation()\n    const filter = useSelector(state => state.filter)\n\n    const handleAddContact = async contact => {\n        if(contacts.some(c => c.name ===contact.name)) {\n          alert(contact.name +' is already in contacts')\n          return\n        }\n    \n        try {\n          await addContact(contact)\n        } catch (error) {\n          console.log('error', error)\n        }\n      }\n    \n    const getVisibleContacts = () => {\n      const normilizedFilter = filter.toLowerCase();\n  \n      const result = contacts.filter(contact => contact.name.toLowerCase().includes(normilizedFilter))\n      return result;\n    }\n\n    return(\n        <Container>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={handleAddContact}/>\n            <h2>Contacts</h2>\n            <Filter />\n            {error && <p>An error occurred:{error}</p>}\n            {isLoading && <p>Loading...</p>}\n            {contacts && <ContactList contacts={getVisibleContacts()}/>}\n        </Container>\n    )\n}\n\n"],"names":["contacts","useDeleteContactMutation","deleteContact","console","log","className","s","map","contact","name","number","type","onClick","id","ContactForm","props","onSubmit","useState","setName","setNumber","handleChange","event","value","target","attributes","preventDefault","pattern","title","onChange","required","filter","useSelector","state","dispatch","useDispatch","filterContacts","currentTarget","ContactsView","useGetContactsQuery","data","error","isLoading","useAddContactMutation","addContact","handleAddContact","some","c","alert","Container","normilizedFilter","toLowerCase","includes","getVisibleContacts"],"sourceRoot":""}